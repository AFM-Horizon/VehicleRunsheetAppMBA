@page "/export"
@attribute [Authorize(Roles = "Admin, Manager, User")]

@using System.IO
@using Microsoft.AspNetCore.Hosting
@using VehicleRunsheetMBAProj.Data.Repositories
@using VehicleRunsheetMBAProj.Models
@using VehicleRunsheetMBAProj.Utilities
<h3>Export</h3>

@inject IUnitOfWork Unit
@inject NavigationManager NavMan

@*<button type="button" class="btn btn-primary" @onclick="HandleClick">Search</button>*@
<input type="date" @onchange="HandleClick" />

@*<input type="button" class="btn btn-primary" @onclick="HandleWrite" />*@

<input type="text" @bind="Email" />

<hr />
@if (RunsheetEntity != null)
{
    <a class="btn btn-warning" href="pdfview/@RunsheetEntity.Id">View PDF</a>
}
<TripTableComponent Runsheet="@RunsheetEntity"></TripTableComponent>

@code {
    [CascadingParameter]
    Task<AuthenticationState> AuthenticationStateTask { get; set; }
    public DateTime Date { get; set; }
    public Runsheet RunsheetEntity { get; set; }
    public string Email { get; set; }

    private async Task HandleClick(ChangeEventArgs e)
    {
        var authState = await AuthenticationStateTask;
        var user = authState.User;
        var claims = user.Claims;
        var userId = user.FindFirst("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier").Value;

        Date = DateTime.Parse(e.Value.ToString());
        var result = await Unit.Runsheets.GetAllWithChildren();
        RunsheetEntity = result.FirstOrDefault(x => x.UserId == userId && x.Date.Date == Date.Date);
    }

    private async Task HandleWrite()
    {

    }
}

