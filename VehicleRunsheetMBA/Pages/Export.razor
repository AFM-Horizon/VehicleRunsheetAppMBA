@page "/export"

@using VehicleRunsheetMBAProj.Data.Repositories
@using VehicleRunsheetMBAProj.Models
@using VehicleRunsheetMBAProj.Utilities
<h3>Export</h3>

@inject IUnitOfWork Unit
@inject CsvRunsheetWriter writer
@inject PdfWriter pdf

@*<button type="button" class="btn btn-primary" @onclick="HandleClick">Search</button>*@
<input type="date" @onchange="HandleClick"/>

<input type="button" class="btn btn-primary" @onclick="HandleWrite" />

<hr/>

@if (Runsheet != null)
{
    <div>
        <table class="table table-dark">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Start Time</th>
                    <th>End Time</th>
                    <th>Customer</th>
                    <th>Order#</th>
                    <th>Received By</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var trip in Runsheet.Trips)
                {
                    <tr>
                        <td>@Runsheet.Date.ToShortDateString()</td>
                        <td>@trip.StartTime.ToShortTimeString()</td>
                        <td>@trip.EndTime.ToShortTimeString()</td>
                        <td>@trip.Customer</td>
                        <td>
                            @foreach (var order in trip.Orders)
                            {
                                <a>@order.OrderNumber</a>
                            }
                    </td>
                    <td>@trip.ReceivedBy</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}
else
{
    <h2><strong>No Runsheet For This Date...</strong></h2>
}

@code {
    public DateTime Date { get; set; }
    public Runsheet Runsheet { get; set; }

    private async Task HandleClick(ChangeEventArgs e)
    {
        Date = DateTime.Parse(e.Value.ToString());
        var result = await Unit.Runsheets.GetAllWithChildren();
        Runsheet = result.FirstOrDefault(x => x.Date.Date == Date.Date);
    }

    private async Task HandleWrite()
    {
        //await writer.WriteRunsheetToCsv(Runsheet);
        pdf.WritePdf(Runsheet);
    }
}
