@page "/managevehicles"
@using VehicleRunsheetMBAProj.Data.Repositories
@using VehicleRunsheetMBAProj.Models
<h3>ManageVehicles</h3>

@attribute [Authorize(Roles = "Admin, Manager")]

@inject IUnitOfWork Unit

@code {
    public VehicleDetails VehicleDetails { get; set; } = new VehicleDetails();
    public List<VehicleDetails> Vehicles { get; set; }
    public bool IsEdit { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await UpdateVehicleList();
    }

    private async Task UpdateVehicleList()
    {
        var result = await Unit.Vehicles.GetAllAsync();
        Vehicles = result.ToList();
    }

    public async Task HandleSuccess()
    {
        if (!IsEdit)
        {
            await Unit.Vehicles.AddAsync(VehicleDetails);
            VehicleDetails = new VehicleDetails();
        }
        else
        {
            await Unit.Vehicles.UpdateAsync(VehicleDetails);
            VehicleDetails = new VehicleDetails();
            IsEdit = false;
        }
        await UpdateVehicleList();
        StateHasChanged();
    }

    //TODO Add Modal Double Check
    public async Task HandleDelete(int id)
    {
        await Unit.Vehicles.DeleteAsync(id);
        await UpdateVehicleList();
        StateHasChanged();
    }

    public async Task HandleEdit(int id)
    {
        IsEdit = true;
        var vehicleToEdit = await Unit.Vehicles.GetByIdAsync(id);
        //VehicleDetails.Id = vehicleToEdit.Id;
        //VehicleDetails.VehicleName = vehicleToEdit.VehicleName;
        //VehicleDetails.Rego = vehicleToEdit.Rego;
        //VehicleDetails.PictureUrl = vehicleToEdit.PictureUrl;
        VehicleDetails = vehicleToEdit;
        StateHasChanged();
    }
}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-5">
            <div>
                <EditForm Model="VehicleDetails" OnValidSubmit="HandleSuccess">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="my-4">
                        <span class="fa fa-car text-warning"></span> Vehicle Details
                        <InputText class="form-control" @bind-Value="@VehicleDetails.VehicleName" />
                    </div>
                    <div class="my-4">
                        <span class="fa fa-registered text-warning"></span> Rego
                        <InputText class="form-control" @bind-Value="@VehicleDetails.Rego" />
                    </div>
                    <div class="my-4">
                        <span class="fa fa-icons text-warning"></span> Icon String
                        <InputSelect @bind-Value="@VehicleDetails.VehicleType">
                            @foreach (var value in Enum.GetValues(typeof(VehicleEnums.VehicleType)))
                            {
                                <option value="@value">@value</option>
                            }
                        </InputSelect>
                    </div>
                    <br />
                    @if (!IsEdit)
                    {
                        <button class="btn btn-primary btn-lg btn-block" type="submit">Create New Entry</button>
                    }
                    else
                    {
                        <button class="btn btn-primary btn-lg btn-block" type="submit">Save Changes</button>
                    }

                </EditForm>
            </div>
        </div>
        <div class="col-md-7">
            <h3><strong>Vehicles</strong></h3>
            <table class="table table-responsive-md table-dark">
                <thead>
                    <tr>
                        <th><span class="fa fa-car text-warning"></span> Details</th>
                        <th><span class="fa fa-registered text-warning"></span> Rego</th>
                        <th><span class="fa fa-icons text-warning"></span> Icon</th>
                        <th><span class="fa fa-edit text-warning"></span> Edit</th>
                        <th><span class="fa fa-trash text-warning"></span> Delete</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Vehicles != null)
                    {
                        @foreach (var vehicle in Vehicles)
                        {
                            <tr>
                                <td>@vehicle.VehicleName</td>
                                <td>@vehicle.Rego</td>
                                <td>@vehicle.VehicleType</td>
                                <td><span class="btn btn-info btn-sm" @onclick="@(() => HandleEdit(@vehicle.Id))">Edit</span></td>
                                <td><span class="btn btn-danger btn-sm" @onclick="@(() => HandleDelete(@vehicle.Id))">Delete</span></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>



