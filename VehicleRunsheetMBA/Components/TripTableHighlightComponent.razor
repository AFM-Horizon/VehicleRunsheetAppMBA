@using VehicleRunsheetMBAProj.Data.Repositories
@using VehicleRunsheetMBAProj.Models

@inject IUnitOfWork Unit

@code {

    [CascadingParameter]
    Task<AuthenticationState> AuthenticationStateTask { get; set; }
    Runsheet runsheet;
    string highlight = "";

    protected override async Task OnParametersSetAsync()
    {
        var authState = await AuthenticationStateTask;
        var user = authState.User;
        var claims = user.Claims;
        var userId = user.FindFirst("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier").Value;

        var allRunsheets = await Unit.Runsheets.GetAllWithChildren();
        runsheet = allRunsheets.FirstOrDefault(x => x.UserId == userId &&  x.InProgress);
    }
}

@if (runsheet != null)
{
    @foreach (var trip in runsheet.Trips)
    {
        highlight = trip.InProgress ? "bg-success" : "";

        <tr class="@highlight">
            <td>
                @trip.StartTime.ToShortTimeString()
            </td>
            <td>
                @trip.EndTime.ToShortTimeString()
            </td>
            <td>
                @trip.Customer
            </td>
            <td>
                @foreach (var order in trip.Orders)
                {
                    <div>
                        @order.OrderNumber, 
                    </div>
                }
            </td>
            <td>
                @trip.ReceivedBy
            </td>
        </tr>
    }
}


